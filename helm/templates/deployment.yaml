{{- if .Values.enabled -}}
{{- $releaseName := .Release.Name -}}
{{- $chartName := include "terrain-server.name" . -}}
{{- $cloudProviderFlavor := include "terrain-server.cloudProviderFlavor" . -}}
{{- $cloudProviderDockerRegistryUrl := include "terrain-server.cloudProviderDockerRegistryUrl" . -}}
{{- $cloudProviderImagePullSecretName := include "terrain-server.cloudProviderImagePullSecretName" . -}}
{{- $imageTag := include "terrain-server.tag" . -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $releaseName }}
  labels:
    app: {{ $chartName }}
    component: {{ $chartName }}
    environment: {{ include "terrain-server.environment" . }}
    release: {{ $releaseName }}
    {{- include "terrain-server.labels" . | nindent 4 }}
  annotations:
    collectord.io/index: {{ quote .Values.splunkIndex }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ $chartName }}
      release: {{ $releaseName }}
      run: {{ $releaseName }}-{{ $chartName }}
      {{- include "terrain-server.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        app: {{ $chartName }}
        release: {{ $releaseName }}
        run: {{ $releaseName }}-{{ $chartName }}
        {{- include "terrain-server.selectorLabels" . | nindent 8 }}
      {{- if .Values.resetOnConfigChange }}
      annotations:
        checksum/configmap: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        {{- if .Values.env.metrics.enabled }}
        prometheus.io/scrape: {{ .Values.env.metrics.prometheus.scrape | quote }}
        prometheus.io/port: {{ .Values.env.metrics.prometheus.port | quote }}
        {{- end }}
      {{- end }}
    spec:
    {{- if $cloudProviderImagePullSecretName }}
      imagePullSecrets:
        - name: {{ $cloudProviderImagePullSecretName | quote }}
    {{- end }}
      containers:
        - name: {{ $releaseName }}-deployment
          {{- with .Values.image }}
          image: {{ $cloudProviderDockerRegistryUrl }}{{ .repository }}:{{ $imageTag }}
          {{- end }}
          imagePullPolicy: {{ .Values.imagePullPolicy }}
          # command:
          #   - sleep
          #   - infinity
          volumeMounts:
            {{- if .Values.caSecretName }}
            - mountPath: {{ printf "%s/%s" .Values.caPath .Values.caKey | quote }}
              name: root-ca
              subPath: {{ quote .Values.caKey }}
            {{- end }}
            {{- if .Values.pvc }}
            - name: storage
              mountPath: /data
              subPath: dem/terrain-server
            {{- end }}
          env:
            - name: SERVER_PORT
              value: {{ .Values.env.targetPort | quote }}
            {{- if .Values.caSecretName }}
            - name: REQUESTS_CA_BUNDLE
              value: {{ printf "%s/%s" .Values.caPath .Values.caKey | quote }}
            - name: NODE_EXTRA_CA_CERTS
              value: {{ printf "%s/%s" .Values.caPath .Values.caKey | quote }}
            {{- end }}
          envFrom:
            - configMapRef:
                name: {{ $releaseName }}-configmap
          ports:
            - name: http
              containerPort: {{ .Values.env.targetPort }}
              protocol: {{ .Values.env.protocol }}
          livenessProbe:
            initialDelaySeconds: {{ .Values.initialDelaySeconds }}
            httpGet:
              path: /health
              port: {{ .Values.env.targetPort }}
          {{- if .Values.resources.enabled }}
          resources:
            {{- toYaml .Values.resources.value | nindent 12 }}
          {{- end }}
      volumes:
        {{- if .Values.caSecretName }}
        - name: root-ca
          secret:
            secretName: {{ .Values.caSecretName }}
        {{- end }}
        {{- if .Values.pvc }}
        - name: storage
          persistentVolumeClaim:
            claimName: {{ quote .Values.pvc }}
        {{- end }}
{{- end -}}
